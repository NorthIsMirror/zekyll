#!/usr/bin/env zsh

ZERO="${(%):-%N}"
REPO_DIR="${ZERO%/*}"
source "$REPO_DIR/lib/script_preamble"
source "$REPO_DIR/lib/script_vars"
source "$REPO_DIR/lib/script_functions"

#
# Zparseopts
#

ZKL_PERFORM_WRITE="0"
ZKL_GIT="0"
ZKL_CD="0"
ZKL_PATH=""
ZKL_HELP="0"
ZKL_DEFAULT="0"
ZKL_VERBOSE="-s"
zparseopts -E -D -A opthash w -write g -git c -cd h -help p: -path: d -default v -verbose || exit 1

# No dry run
(( ${+opthash[-w]} + ${+opthash[--write]} )) && ZKL_PERFORM_WRITE="1"
(( ${+opthash[-g]} + ${+opthash[--git]} )) && ZKL_GIT="1"
(( ${+opthash[-c]} + ${+opthash[--cd]} )) && ZKL_CD="1"
(( ${+opthash[-h]} + ${+opthash[--help]} )) && ZKL_HELP="1"
(( ${+opthash[-p]} )) && ZKL_PATH="${opthash[-p]}"
(( ${+opthash[--path]} )) && ZKL_PATH="${opthash[--path]}"
(( ${+opthash[-d]} + ${+opthash[--default]} )) && ZKL_DEFAULT="1"
(( ${+opthash[-v]} + ${+opthash[--verbose]} )) && ZKL_VERBOSE=""

# -c/--cd means prompt should be displayed
# it will use ZEKYLL_DEFAULT_REPO as normal
[ "$ZKL_CD" = "1" ] && ZKL_DEFAULT="0"

if [ "$ZKL_HELP" = "1" ]; then
    pinfo "Usage: zkl-mv [options] {src zekyll} {dst zekyll}"
    print "Takes two zekylls, e.g. ab cd, and moves associated file"
    print "ab--* to cd--*, preserving description, and checking for"
    print "a collision with already existing cd--* file."
    print
    help-opts
    help-dry
    help-git
    help-cd
    help-path
    help-dft

    exit 0
fi

dry-mode-msg

#
# Read destination path?
#

if [ "$ZKL_CD" = "1" ]; then
    # -p/--path will be used as ZKL_PATH is being used
    resolve_path
else
    # Use -p/--path
    if [ -n "$ZKL_PATH" ]; then
        REPLY="$ZKL_PATH"
    else
        REPLY="."
    fi
fi

#
# Will work on
#

cd_will_work_on "$REPLY" "$ZKL_VERBOSE" || exit 1

#
# Examine parameters
#

if [[ -z "$1" || -z "$2" ]]; then
    perror "Two arguments needed, source zekyll and destination zekyll"
    exit 1
fi

#
# Examine files
#

local src_zekyll="$1"
local dst_zekyll="$2"

local -a src_file
src_file=( ${src_zekyll}.[A-Z]--*(N.) )

local -a dst_file
dst_file=( ${dst_zekyll}.[A-Z]--*(N) )

if [[ "${#src_file}" -eq 0 ]]; then
    perror "Source file doesn't exist (for zekyll: $src_zekyll)"
    exit 1
fi

if [[ "${#dst_file}" -ne 0 ]]; then
    perror "Destination file already exists: ${dst_file[1]}"
    exit 1
fi

#
# Compute destination zekyll
#

src="${src_file[1]}"
dst="${src#[a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]}"
dst="${dst_zekyll}${dst}"

#
# Disk operations, dry or actual
#

if [ "$ZKL_GIT" = "1" ]; then
    if [ "$ZKL_PERFORM_WRITE" = "1" ]; then
        git mv -v "$src" "$dst"
    else
        echo "git mv \"$src\" \"$dst\""
    fi
else
    if [ "$ZKL_PERFORM_WRITE" = "1" ]; then
        mv -v "$src" "$dst"
    else
        echo "mv \"$src\" \"$dst\""
    fi
fi
