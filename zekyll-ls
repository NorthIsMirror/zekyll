#!/usr/bin/env zsh

0="${(%):-%N}"
REPO_DIR="${0%/*}"
source "$REPO_DIR/lib/script_preamble"
source "$REPO_DIR/lib/script_functions"

#
# Zparseopts
#

ZKL_PERFORM_WRITE="0"
ZKL_ADD_GIT="0"
zparseopts -E -D -A opthash w -write g -git || exit 1

# No dry run
(( ${+opthash[-w]} + ${+opthash[--write]} )) && ZKL_PERFORM_WRITE="1"
(( ${+opthash[-g]} + ${+opthash[--git]} )) && ZKL_ADD_GIT="1"

#
# Read destination path
#

read_destination_path || exit 1
cd_will_work_on "$REPLY"

#
# Read and examine new zekylls string
#

local zekylls_string_vis=""
vared -cp "Enter zekylls: " zekylls_string_vis

print
zekylls_string="${zekylls_string_vis//_/}"
pinfo2 "Read: $zekylls_string"
print

local -a zekylls1
zekylls1=( ${(@s:_:)${zekylls_string//(#b)([a-zA-Z0-9][a-zA-Z0-9])/$match[1]_}} )

pinfo "Checking current zekyll for duplicates..."
if ! detect_duplicates "${zekylls1[@]}"; then
    perror "Duplicates found, restaring, but continuing to listing the zekylls"
fi

print

#
# Skip incomplete zekyll
#

if [ "${#${zekylls1[-1]}}" = "1" ]; then
    zekylls1[-1]=()
fi

#
# Do the listing
#

local -a existing
existing=( )
local zekyll
for zekyll in "${zekylls1[@]}"; do
    zekyll_file=( ${zekyll}--*(N.) )
    if [[ "$#zekyll_file" -eq 0 ]]; then
        perror "No such zekyll $zekyll"
    else
        existing+=( "$zekyll" )
        pinfo2 "-> ${zekyll_file[1]}"
    fi
done

print

echo "Your EDITOR string would be: ${EDITOR:-vim} ~/.vimrc" $^existing"--*"
