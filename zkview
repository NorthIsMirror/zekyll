#!/usr/bin/env zsh

ZERO="${(%):-%N}"
REPO_DIR="${ZERO%/*}"
source "$REPO_DIR/lib/script_preamble"
source "$REPO_DIR/lib/script_vars"
source "$REPO_DIR/lib/script_functions"

#
# Zparseopts
#

ZKL_HELP="0"
ZKL_PATH=""
ZKL_ZEKYLLS=""
ZKL_DEFAULT="0"
zparseopts -E -D -A opthash h -help p: -path: z: -zkl: d -default || exit 1

(( ${+opthash[-h]} + ${+opthash[--help]} )) && ZKL_HELP="1"
(( ${+opthash[-p]} )) && ZKL_PATH="${opthash[-p]}"
(( ${+opthash[--path]} )) && ZKL_PATH="${opthash[--path]}"
(( ${+opthash[-z]} )) && ZKL_ZEKYLLS="${opthash[-z]}"
(( ${+opthash[--zkl]} )) && ZKL_ZEKYLLS="${opthash[--zkl]}"
(( ${+opthash[-d]} + ${+opthash[--default]} )) && ZKL_DEFAULT="1"

if [ "$ZKL_HELP" = "1" ]; then
    pinfo "Usage: zkl-view-zekylls [options]"
    print "Asks for zekylls, and displays selection list with them, launching \$EDITOR at each selection"
    print
    help-opts
    help-path
    help-zkl
    help-dft

    exit 0
fi

#
# Read destination path
#

REPLY="$ZKL_PATH"
[ "$REPLY" = "" ] && resolve_path
cd_will_work_on "$REPLY" || exit 1

#
# Read and examine new zekylls string
#

local zekylls_string_vis=""

if [ "$ZKL_ZEKYLLS" = "" ]; then
    vared -cp "Enter zekylls: " zekylls_string_vis
else
    zekylls_string_vis="$ZKL_ZEKYLLS"
fi

print
zekylls_string="${zekylls_string_vis//_/}"
pinfo2 "Read: $zekylls_string"
print

local -a zekylls1
zekylls1=( ${(@s:_:)${zekylls_string//(#b)([a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9])/$match[1]_}} )

pinfo "Checking current zekyll for duplicates..."
if ! detect_duplicates "${zekylls1[@]}"; then
    perror "Duplicates found, restaring, but continuing to listing the zekylls"
fi

print

#
# Skip incomplete zekyll
#

if [ "${#${zekylls1[-1]}}" = "1" ]; then
    zekylls1[-1]=()
fi

#
# Obtain section ordered list
#

filter_for_existing_zekylls "${zekylls1[@]}"

local -a existing files sections
existing=( "${reply[@]}" )
files=( "${reply2[@]}" )
sections=( "${reply3[@]}" )

[[ "${#existing}" -eq 0 ]] && print && exit 0

# Move to section order
integer a i secsize="${#section_letters}" size="${#files}"
local -a section_order_existing
for (( a=1; a<=secsize; a++ )); do
    selected_section="${section_letters[a]}"
    for (( i=1; i<=size; i++ )); do
        [ "$selected_section" != "${sections[i]#.}" ] && continue
        section_order_existing+=( "$existing[i]" )
        pinfo2 "-> ${files[i]}"
    done
done

#
# Display list of zekylls and open editor for any selection
#

local -a files
files=( ${^section_order_existing}.[A-Z]--*(N.) )

while (( 1 )); do
    local selection=""
    selection=$( "$REPO_DIR/zsh-select-zekyll" "${files[@]}" "END SELECTION" )

    [[ "$selection" = "" || "$selection" = "END SELECTION" ]] && print && break

    "${EDITOR:-vim}" "$selection"
done
