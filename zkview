#!/usr/bin/env zsh

ZERO="${(%):-%N}"
REPO_DIR="${ZERO%/*}"
# On asciinema 0 and ZERO are functionargzero
[ "$ZERO" = "$REPO_DIR" ] && REPO_DIR="$HOME/.zekyll/zekyll"
source "$REPO_DIR/lib/script_preamble"
source "$REPO_DIR/lib/script_vars"
source "$REPO_DIR/lib/script_functions"

#
# Zparseopts
#

ZKL_HELP="0"
ZKL_PATH=""
ZKL_ZEKYLLS=""
ZKL_DEFAULT="0"
ZKL_VERBOSE="-s"
ZKL_NOANSI="0"
ZKL_QUIET="0"
ZKL_REPO=""
zparseopts -E -D -A opthash h -help p: -path: z: -zkl: d -default v -verbose \
            n -noansi q -quiet r: -repo: || exit 1

(( ${+opthash[-h]} + ${+opthash[--help]} )) && ZKL_HELP="1"
(( ${+opthash[-p]} )) && ZKL_PATH="${opthash[-p]}"
(( ${+opthash[--path]} )) && ZKL_PATH="${opthash[--path]}"
(( ${+opthash[-z]} )) && ZKL_ZEKYLLS="${opthash[-z]}"
(( ${+opthash[--zkl]} )) && ZKL_ZEKYLLS="${opthash[--zkl]}"
(( ${+opthash[-d]} + ${+opthash[--default]} )) && ZKL_DEFAULT="1"
(( ${+opthash[-v]} + ${+opthash[--verbose]} )) && ZKL_VERBOSE=""
(( ${+opthash[-n]} + ${+opthash[--noansi]} )) && ZKL_NOANSI="1"
(( ${+opthash[-q]} + ${+opthash[--quiet]} )) && ZKL_QUIET="1"
(( ${+opthash[-r]} )) && ZKL_REPO="${opthash[-r]}"
(( ${+opthash[--repo]} )) && ZKL_REPO="${opthash[--repo]}"

noansi

if [ "$ZKL_HELP" = "1" ]; then
    pinfo "Usage: zkl-view-zekylls [options]"
    print "Asks for zekylls, and displays selection list with them, launching \$EDITOR at each selection"
    print
    help-opts
    help-path
    help-zkl
    help-dft

    exit 0
fi

#
# Read destination path
# Much of pure control code
#

if [ -n "$ZKL_REPO" ]; then
    local bkp_zkl_path="$ZKL_PATH"
    if resolve_repo; then
        ZKL_PATH="$REPLY"
    else
        qerror "Provided repository doesn't exist (path: $REPLY)"
        # Next try with path if user gave it, or when user gave
        # -d and ZEKYLL_DEFAULT_REPO is not empty
        if [[ -n "$bkp_zkl_path" ]]; then
            ZKL_PATH="$bkp_zkl_path"
            qerror "Trying with provided path: $ZKL_PATH"
        elif [[ "$ZKL_DEFAULT" = "1" && -n "$ZEKYLL_DEFAULT_REPO" ]]; then
            qerror "Trying with ZEKYLL_DEFAULT_REPO: $ZEKYLL_DEFAULT_REPO"
        else
            exit 27
        fi
    fi
fi

REPLY="$ZKL_PATH"
[ "$REPLY" = "" ] && resolve_path
ZKL_PATH="$REPLY"
cd_will_work_on "$REPLY" "$ZKL_VERBOSE" || exit 1

#
# Read and examine new zekylls string
#

local zekylls_string_vis=""

if [ "$ZKL_ZEKYLLS" = "" ]; then
    vared -cp "Enter zekylls: " zekylls_string_vis
else
    zekylls_string_vis="$ZKL_ZEKYLLS"
fi

print
zekylls_string="${zekylls_string_vis//_/}"
pinfo2 "Read: $zekylls_string"
print

local -a zekylls1
zekylls1=( ${(@s:_:)${zekylls_string//(#b)([a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9])/$match[1]_}} )

pinfo "Checking current zekyll for duplicates..."
if ! detect_duplicates "${zekylls1[@]}"; then
    perror "Duplicates found, restaring, but continuing to listing the zekylls"
fi

print

#
# Skip incomplete zekyll
#

if [ "${#${zekylls1[-1]}}" = "1" ]; then
    zekylls1[-1]=()
fi

#
# Obtain section ordered list
#

filter_for_existing_zekylls "${zekylls1[@]}"

[[ "${#reply}" -eq 0 ]] && print && exit 0

three_to_section_order "${#reply}" "${reply[@]}" "${reply2[@]}" "${reply3[@]}"

local file
for file in "${reply2[@]}"; do
    pinfo2 "-> $file"
done

#
# Display list of zekylls and open editor for any selection
#

local -a files
files=( ${^reply}.[A-Z]--*(N.) )

while (( 1 )); do
    local selection=""
    selection=$( "$REPO_DIR/zsh-select-zekyll" "${files[@]}" "END SELECTION" )

    [[ "$selection" = "" || "$selection" = "END SELECTION" ]] && print && break

    "${EDITOR:-vim}" "$selection"
done
